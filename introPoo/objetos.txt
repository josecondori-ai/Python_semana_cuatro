 Introducción a la programación orientada a objetos en Python


La programación orientada a objetos es uno de los paradigmas de programación más usados en el desarrollo de software. En este paradigma, todos los datos o elementos con los cuales trabajamos son objetos. El uso de los objetos de la programación orientada a objetos, en algunas ocasiones, nos permite simplificar los problemas que estamos trabajando, ya que nos permite representar y modelar cosas de la vida real. Cuando hablamos de objetos en la programación orientada a objetos, estamos hablando de elementos o instancias que se crean a partir de una clase. Estos objetos tienen atributos y métodos. Los atributos son las características que definen el objeto. Si hablamos de un objeto carro, sus atributos serían el color y la marca, mientras que los métodos son las funciones que tienen ese objeto; en el caso del carro, la función es transportar personas. La programación orientada a objetos se basa en cuatro pilares: la abstracción permite definir las características y funcionalidades de un objeto; es como un plano, a partir del cual construimos ese objeto. El encapsulamiento nos permite evitar que los objetos se manipulen de manera incorrecta. La herencia. Podemos crear el plano de un tipo de objeto al que llamaremos hijo a través del plano del objeto padre. Por ejemplo, a partir del plano del objeto medio de transporte, podemos crear el plano del objeto carro; ambos comparten características y funciones similares, pero no son el mismo objeto. El polimorfismo hace referencia a cada objeto creado a partir del mismo plano y puede responder de manera diferente ante una función